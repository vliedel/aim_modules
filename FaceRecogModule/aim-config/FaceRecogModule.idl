/**
 * IDL description of the FaceRecogModule
 *
 * This file is automatically parsed by the rurbuilder backends for the omniidl compiler. The names of the functions
 * will become port identifiers. The names of the function variables are not used. 
 *
 * The syntax of the IDL file also allows for "inout", but not all middlewares will accept this yet.
 */

#pragma author               Bart van Vliet
#pragma copyright            DoBots
#pragma date                 feb  7, 2014
#pragma license              GNU General Lesser Public Licence

// Recommended namespace "rur"
module rur {

// The command-line parameter (this struct is required)
struct Param {
	// multiple modules can be addressed in parallel, killed, etc. using "module_id"
	string module_id;
};

// Typedef for array of integers
typedef sequence<long> long_seq;

// The public interface of FaceRecogModule
interface FaceRecogModule {

	// Input image, should be a face as rgb image
	void FaceImage(in long_seq rgb);

	// Classified output, 0 for unknown face
	void Classified(out long label);

	// Command port
	// set "train" to an int value above 0 to make the module train, the number defines the label.
	// set "train" to 0 to predict
	// set "threshold" to an int value above 0 (e.g. 40) for classifying faces as unknown. Lower number leads to more unknowns.
	void Cmd(in string cmd);
};

};
